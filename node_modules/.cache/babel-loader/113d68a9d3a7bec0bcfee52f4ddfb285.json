{"remainingRequest":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/babel-loader/lib/index.js!/Users/xmg/Desktop/前端知识/13期/Day 04/mall/src/network/network.js","dependencies":[{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/src/network/network.js","mtime":1541064610000},{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/cache-loader/dist/cjs.js","mtime":1541055698000},{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import axios from 'axios'; // ES6 Promise的封装\n\nexport function request(options) {\n  return new Promise(function (resolve, reject) {\n    // 1.创建axios的实例对象\n    var instance = axios.create({\n      baseURL: 'http://123.207.32.32:8000',\n      timeout: 5000\n    }); // 过滤器(拦截器)\n\n    instance.interceptors.response.use(function (res) {\n      return res.data;\n    }); // 通过实例发送网络请求\n\n    instance(options).then(function (res) {\n      resolve(res);\n    }).catch(function (err) {\n      reject(err);\n    });\n  });\n} // ES5封装方式\n// export function request(options, success, failure) {\n//   // 1.创建axios的实例对象\n//   const instance = axios.create({\n//     baseURL: 'http://123.207.32.32:8000',\n//     timeout: 5000\n//   })\n//\n//   // 过滤器(拦截器)\n//   instance.interceptors.response.use(res => {\n//     return res.data\n//   })\n//\n//   // 通过实例发送网络请求\n//   instance(options)\n//       .then(res => {\n//         success(res)\n//       }).catch(err => {\n//         failure(err)\n//       })\n// }",{"version":3,"sources":["/Users/xmg/Desktop/前端知识/13期/Day 04/mall/src/network/network.js"],"names":["axios","request","options","Promise","resolve","reject","instance","create","baseURL","timeout","interceptors","response","use","res","data","then","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,SAASC,OAAT,CAAiBC,OAAjB,EAA0B;AAC/B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC;AACA,QAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAN,CAAa;AAC5BC,MAAAA,OAAO,EAAE,2BADmB;AAE5BC,MAAAA,OAAO,EAAE;AAFmB,KAAb,CAAjB,CAFsC,CAOtC;;AACAH,IAAAA,QAAQ,CAACI,YAAT,CAAsBC,QAAtB,CAA+BC,GAA/B,CAAmC,UAAAC,GAAG,EAAI;AACxC,aAAOA,GAAG,CAACC,IAAX;AACD,KAFD,EARsC,CAYtC;;AACAR,IAAAA,QAAQ,CAACJ,OAAD,CAAR,CACKa,IADL,CACU,UAAAF,GAAG,EAAI;AACXT,MAAAA,OAAO,CAACS,GAAD,CAAP;AACD,KAHL,EAGOG,KAHP,CAGa,UAAAC,GAAG,EAAI;AACdZ,MAAAA,MAAM,CAACY,GAAD,CAAN;AACL,KALD;AAMD,GAnBM,CAAP;AAoBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\r\n\r\n// ES6 Promise的封装\r\nexport function request(options) {\r\n  return new Promise((resolve, reject) => {\r\n    // 1.创建axios的实例对象\r\n    const instance = axios.create({\r\n      baseURL: 'http://123.207.32.32:8000',\r\n      timeout: 5000\r\n    })\r\n\r\n    // 过滤器(拦截器)\r\n    instance.interceptors.response.use(res => {\r\n      return res.data\r\n    })\r\n\r\n    // 通过实例发送网络请求\r\n    instance(options)\r\n        .then(res => {\r\n          resolve(res)\r\n        }).catch(err => {\r\n          reject(err)\r\n    })\r\n  })\r\n}\r\n\r\n// ES5封装方式\r\n// export function request(options, success, failure) {\r\n//   // 1.创建axios的实例对象\r\n//   const instance = axios.create({\r\n//     baseURL: 'http://123.207.32.32:8000',\r\n//     timeout: 5000\r\n//   })\r\n//\r\n//   // 过滤器(拦截器)\r\n//   instance.interceptors.response.use(res => {\r\n//     return res.data\r\n//   })\r\n//\r\n//   // 通过实例发送网络请求\r\n//   instance(options)\r\n//       .then(res => {\r\n//         success(res)\r\n//       }).catch(err => {\r\n//         failure(err)\r\n//       })\r\n// }"]}]}