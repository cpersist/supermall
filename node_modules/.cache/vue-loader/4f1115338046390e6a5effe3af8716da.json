{"remainingRequest":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/xmg/Desktop/前端知识/13期/Day 04/mall/src/views/detail/Detail.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/src/views/detail/Detail.vue","mtime":1543658523000},{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/cache-loader/dist/cjs.js","mtime":1541055698000},{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/cache-loader/dist/cjs.js","mtime":1541055698000},{"path":"/Users/xmg/Desktop/前端知识/13期/Day 04/mall/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import DetailNavBar from './childComps/DetailNavBar'\n  import DetailSwiper from './childComps/DetailSwiper'\n  import DetailBaseInfo from './childComps/DetailBaseInfo'\n  import DetailShopInfo from './childComps/DetailShopInfo'\n  import DetailGoodsInfo from './childComps/DetailGoodsInfo'\n  import DetailParamInfo from './childComps/DetailParamInfo'\n  import DetailCommentInfo from './childComps/DetailCommentInfo'\n  import DetailBottomBar from './childComps/DetailBottomBar'\n  import CartButton from './childComps/CartButton'\n\n  import GoodsList from 'components/content/goods/GoodsList'\n\n  import Scroll from 'components/common/scroll/Scroll'\n\n  import {getDetail, getRecommend, Goods, Shop, GoodsParam} from \"network/detail\";\n  import {backTopMixin} from \"common/mixin\";\n  import {mapActions} from 'vuex'\n\n  import Toast from 'components/common/toast/Toast'\n\n  export default {\n    name: \"Detail\",\n    components: {\n\t    DetailParamInfo,\n    \tDetailNavBar,\n      DetailSwiper,\n      DetailBaseInfo,\n\t    DetailShopInfo,\n      DetailGoodsInfo,\n      DetailCommentInfo,\n      CartButton,\n\t    GoodsList,\n      DetailBottomBar,\n      Scroll,\n      Toast\n    },\n    mixins: [backTopMixin],\n    data() {\n      return {\n      \tiid: '',\n        topImages: [],\n        goods: {},\n        shop: {},\n\t      detailInfo: {},\n        paramInfo: {},\n        commentInfo: {},\n        goodsList: [],\n        themeTops: [],\n        currentIndex: 0\n      }\n    },\n    created() {\n    \t// 1.取出iid\n      this.iid = this.$route.query.iid\n\n      // 2.发送商品请求\n      this._getDetail(this.iid)\n\n      // 3.请求推荐请求\n      this._getRecommend()\n    },\n    methods: {\n      ...mapActions({\n        addCart: 'addToCart'\n      }),\n\t    imageLoad() {\n\t    \tthis.$refs.scroll.refresh()\n        // 获取对应的offsetTop\n        this.themeTops = []\n        this.themeTops.push(0)\n        this.themeTops.push(this.$refs.param.$el.offsetTop)\n        this.themeTops.push(this.$refs.comment.$el.offsetTop)\n        this.themeTops.push(this.$refs.recommend.$el.offsetTop)\n        this.themeTops.push(Number.MAX_VALUE)\n\t    },\n\t    selectIndex(index) {\n\t\t    this.$refs.scroll.scrollTo(0, -this.themeTops[index], 500)\n\t    },\n\t    contentScroll(position) {\n\t    \t// 决定backTop按钮是否显示\n\t\t    this.showBackTop = position.y <= -1000\n\t    \t// 监听滚动到某个主题\n        this._listenScrollTheme(-position.y)\n\t    },\n      _listenScrollTheme(position) {\n\t      let length = this.themeTops.length;\n\t      for (let i = 0; i < length; i++) {\n\t\t      let iPos = this.themeTops[i];\n\t\t      /**\n\t\t       * 判断的方案:\n\t\t       *  方案一:\n\t\t       *    条件: (i < (length-1) && currentPos >= iPos && currentPos < this.themeTops[i+1]) || (i === (length-1) && currentPos >= iPos),\n\t\t       *    优点: 不需要引入其他的内容, 通过逻辑解决\n\t\t       *    缺点: 判断条件过长, 并且不容易理解\n\t\t       *  方案二:\n\t\t       *    条件: 给themeTops最后添加一个很大的值, 用于和最后一个主题的top进行比较.\n\t\t       *    优点: 简洁明了, 便于理解\n\t\t       *    缺点: 需要引入一个较大的int数字\n\t\t       * 疑惑: 在第一个判断中, 为什么不能直接判断(currentPos >= iPos)即可?\n\t\t       * 解答: 比如在某一个currentPos大于第0个时, 就会break, 不会判断后面的i了.\n\t\t       */\n\t\t      if (position >= iPos && position < this.themeTops[i+1]) {\n\t\t\t      if (this.currentIndex !== i) {\n\t\t\t\t      this.currentIndex = i;\n\t\t\t      }\n\t\t\t      break;\n\t\t      }\n\t      }\n      },\n\t    cartClick() {\n\t    \tthis.$router.push('/cart')\n      },\n\t    addToCart() {\n        // 2.将商品信息添加到Store中\n        const obj = {}\n        obj.iid = this.iid\n        obj.imgURL = this.topImages[0]\n        obj.title = this.goods.title\n        obj.desc = this.goods.desc\n        obj.price = this.goods.realPrice\n        // this.$store.dispatch('addToCart', obj).then(() => {\n\t       //  this.$toast({message: '加入购物车成功'})\n        // })\n        this.addCart(obj).then(() => {\n\t        this.$toast({message: '加入购物车成功'})\n        })\n\t    },\n    \t_getDetail(iid) {\n        getDetail(iid).then(res => {\n        \t// 1.获取数据\n          const data = res.result\n\t        console.log(data);\n\n\t        // 2.获取顶部的图片数据\n          this.topImages = data.itemInfo.topImages\n\n          // 3.获取商品信息\n          this.goods = new Goods(data.itemInfo, data.columns, data.shopInfo.services)\n\n          // 4.获取店铺信息\n          this.shop = new Shop(data.shopInfo)\n\n          // 5.获取商品详细信息\n          this.detailInfo = data.detailInfo\n\n          // 6.保存参数信息\n          this.paramInfo = new GoodsParam(data.itemParams.info, data.itemParams.rule)\n\n          // 7.保存评论数据\n\t        if (data.rate.list) {\n\t\t        this.commentInfo = data.rate.list[0];\n\t        }\n        })\n      },\n\t    _getRecommend() {\n\t    \tgetRecommend().then(res => {\n\t    \t\tthis.goodsList = res.data.list\n\t\t    })\n      }\n    }\n  }\n",{"version":3,"sources":["Detail.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Detail.vue","sourceRoot":"src/views/detail","sourcesContent":["<template>\r\n  <div id=\"detail\">\r\n    <detail-nav-bar @titleClick=\"selectIndex\" :current-index=\"currentIndex\"/>\r\n    <scroll class=\"content\"\r\n            ref=\"scroll\"\r\n            @scroll=\"contentScroll\"\r\n            :probe-type=\"3\"\r\n            :data=\"[topImages, goods, shop, detailInfo, paramInfo, goodsList]\">\r\n      <detail-swiper :images=\"topImages\"/>\r\n      <detail-base-info :goods=\"goods\"/>\r\n      <detail-shop-info :shop=\"shop\"/>\r\n      <detail-goods-info :detail-info=\"detailInfo\" @imageLoad=\"imageLoad\"/>\r\n      <detail-param-info ref=\"param\" :param-info=\"paramInfo\"/>\r\n      <detail-comment-info ref=\"comment\" :comment-info=\"commentInfo\"/>\r\n      <goods-list ref=\"recommend\" :goods=\"goodsList\"/>\r\n    </scroll>\r\n    <back-top v-show=\"showBackTop\" @click.native=\"backTop\"/>\r\n    <!--<cart-button @click.native=\"cartClick\"/>-->\r\n    <detail-bottom-bar @addToCart=\"addToCart\"/>\r\n    <toast ref=\"toast\"/>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import DetailNavBar from './childComps/DetailNavBar'\r\n  import DetailSwiper from './childComps/DetailSwiper'\r\n  import DetailBaseInfo from './childComps/DetailBaseInfo'\r\n  import DetailShopInfo from './childComps/DetailShopInfo'\r\n  import DetailGoodsInfo from './childComps/DetailGoodsInfo'\r\n  import DetailParamInfo from './childComps/DetailParamInfo'\r\n  import DetailCommentInfo from './childComps/DetailCommentInfo'\r\n  import DetailBottomBar from './childComps/DetailBottomBar'\r\n  import CartButton from './childComps/CartButton'\r\n\r\n  import GoodsList from 'components/content/goods/GoodsList'\r\n\r\n  import Scroll from 'components/common/scroll/Scroll'\r\n\r\n  import {getDetail, getRecommend, Goods, Shop, GoodsParam} from \"network/detail\";\r\n  import {backTopMixin} from \"common/mixin\";\r\n  import {mapActions} from 'vuex'\r\n\r\n  import Toast from 'components/common/toast/Toast'\r\n\r\n  export default {\r\n    name: \"Detail\",\r\n    components: {\r\n\t    DetailParamInfo,\r\n    \tDetailNavBar,\r\n      DetailSwiper,\r\n      DetailBaseInfo,\r\n\t    DetailShopInfo,\r\n      DetailGoodsInfo,\r\n      DetailCommentInfo,\r\n      CartButton,\r\n\t    GoodsList,\r\n      DetailBottomBar,\r\n      Scroll,\r\n      Toast\r\n    },\r\n    mixins: [backTopMixin],\r\n    data() {\r\n      return {\r\n      \tiid: '',\r\n        topImages: [],\r\n        goods: {},\r\n        shop: {},\r\n\t      detailInfo: {},\r\n        paramInfo: {},\r\n        commentInfo: {},\r\n        goodsList: [],\r\n        themeTops: [],\r\n        currentIndex: 0\r\n      }\r\n    },\r\n    created() {\r\n    \t// 1.取出iid\r\n      this.iid = this.$route.query.iid\r\n\r\n      // 2.发送商品请求\r\n      this._getDetail(this.iid)\r\n\r\n      // 3.请求推荐请求\r\n      this._getRecommend()\r\n    },\r\n    methods: {\r\n      ...mapActions({\r\n        addCart: 'addToCart'\r\n      }),\r\n\t    imageLoad() {\r\n\t    \tthis.$refs.scroll.refresh()\r\n        // 获取对应的offsetTop\r\n        this.themeTops = []\r\n        this.themeTops.push(0)\r\n        this.themeTops.push(this.$refs.param.$el.offsetTop)\r\n        this.themeTops.push(this.$refs.comment.$el.offsetTop)\r\n        this.themeTops.push(this.$refs.recommend.$el.offsetTop)\r\n        this.themeTops.push(Number.MAX_VALUE)\r\n\t    },\r\n\t    selectIndex(index) {\r\n\t\t    this.$refs.scroll.scrollTo(0, -this.themeTops[index], 500)\r\n\t    },\r\n\t    contentScroll(position) {\r\n\t    \t// 决定backTop按钮是否显示\r\n\t\t    this.showBackTop = position.y <= -1000\r\n\t    \t// 监听滚动到某个主题\r\n        this._listenScrollTheme(-position.y)\r\n\t    },\r\n      _listenScrollTheme(position) {\r\n\t      let length = this.themeTops.length;\r\n\t      for (let i = 0; i < length; i++) {\r\n\t\t      let iPos = this.themeTops[i];\r\n\t\t      /**\r\n\t\t       * 判断的方案:\r\n\t\t       *  方案一:\r\n\t\t       *    条件: (i < (length-1) && currentPos >= iPos && currentPos < this.themeTops[i+1]) || (i === (length-1) && currentPos >= iPos),\r\n\t\t       *    优点: 不需要引入其他的内容, 通过逻辑解决\r\n\t\t       *    缺点: 判断条件过长, 并且不容易理解\r\n\t\t       *  方案二:\r\n\t\t       *    条件: 给themeTops最后添加一个很大的值, 用于和最后一个主题的top进行比较.\r\n\t\t       *    优点: 简洁明了, 便于理解\r\n\t\t       *    缺点: 需要引入一个较大的int数字\r\n\t\t       * 疑惑: 在第一个判断中, 为什么不能直接判断(currentPos >= iPos)即可?\r\n\t\t       * 解答: 比如在某一个currentPos大于第0个时, 就会break, 不会判断后面的i了.\r\n\t\t       */\r\n\t\t      if (position >= iPos && position < this.themeTops[i+1]) {\r\n\t\t\t      if (this.currentIndex !== i) {\r\n\t\t\t\t      this.currentIndex = i;\r\n\t\t\t      }\r\n\t\t\t      break;\r\n\t\t      }\r\n\t      }\r\n      },\r\n\t    cartClick() {\r\n\t    \tthis.$router.push('/cart')\r\n      },\r\n\t    addToCart() {\r\n        // 2.将商品信息添加到Store中\r\n        const obj = {}\r\n        obj.iid = this.iid\r\n        obj.imgURL = this.topImages[0]\r\n        obj.title = this.goods.title\r\n        obj.desc = this.goods.desc\r\n        obj.price = this.goods.realPrice\r\n        // this.$store.dispatch('addToCart', obj).then(() => {\r\n\t       //  this.$toast({message: '加入购物车成功'})\r\n        // })\r\n        this.addCart(obj).then(() => {\r\n\t        this.$toast({message: '加入购物车成功'})\r\n        })\r\n\t    },\r\n    \t_getDetail(iid) {\r\n        getDetail(iid).then(res => {\r\n        \t// 1.获取数据\r\n          const data = res.result\r\n\t        console.log(data);\r\n\r\n\t        // 2.获取顶部的图片数据\r\n          this.topImages = data.itemInfo.topImages\r\n\r\n          // 3.获取商品信息\r\n          this.goods = new Goods(data.itemInfo, data.columns, data.shopInfo.services)\r\n\r\n          // 4.获取店铺信息\r\n          this.shop = new Shop(data.shopInfo)\r\n\r\n          // 5.获取商品详细信息\r\n          this.detailInfo = data.detailInfo\r\n\r\n          // 6.保存参数信息\r\n          this.paramInfo = new GoodsParam(data.itemParams.info, data.itemParams.rule)\r\n\r\n          // 7.保存评论数据\r\n\t        if (data.rate.list) {\r\n\t\t        this.commentInfo = data.rate.list[0];\r\n\t        }\r\n        })\r\n      },\r\n\t    _getRecommend() {\r\n\t    \tgetRecommend().then(res => {\r\n\t    \t\tthis.goodsList = res.data.list\r\n\t\t    })\r\n      }\r\n    }\r\n  }\r\n</script>\r\n\r\n<style scoped>\r\n  #detail {\r\n    height: 100vh;\r\n    position: relative;\r\n    z-index: 1;\r\n    background-color: #fff;\r\n  }\r\n\r\n  .content {\r\n    position: absolute;\r\n    top: 44px;\r\n    bottom: 58px;\r\n    left: 0;\r\n    right: 0;\r\n  }\r\n</style>"]}]}